// –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å Firebase Realtime Database
class FirebaseExample {
    constructor() {
        // 1. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç –Ω–∞ Firebase Console
        // 2. –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        this.config = {
            apiKey: "AIzaSyYourApiKeyHere",
            authDomain: "your-project.firebaseapp.com",
            databaseURL: "https://your-project-default-rtdb.firebaseio.com",
            projectId: "your-project-id",
            storageBucket: "your-project.appspot.com",
            messagingSenderId: "123456789",
            appId: "1:123456789:web:abcdef123456"
        };
        
        // 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firebase
        this.initFirebase();
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
    initFirebase() {
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º Firebase SDK –≤ HTML:
        // <script src="https://www.gstatic.com/firebasejs/9.0.0/firebase-app.js"></script>
        // <script src="https://www.gstatic.com/firebasejs/9.0.0/firebase-database.js"></script>
        
        if (typeof firebase !== 'undefined') {
            firebase.initializeApp(this.config);
            this.database = firebase.database();
            console.log('‚úÖ Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.error('‚ùå Firebase SDK –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
        }
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Firebase
    async saveData(tournament, data) {
        try {
            if (!this.database) {
                throw new Error('Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            }

            // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —É–∑–µ–ª –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            const reference = this.database.ref(`xeetflow/${tournament}`);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            await reference.set({
                heroes: data.heroes,
                avatars: data.avatars,
                timestamp: Date.now(),
                totalRecords: data.heroes.length,
                lastUpdated: new Date().toISOString()
            });

            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Firebase');
            return true;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Firebase:', error);
            return false;
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firebase
    async loadData(tournament) {
        try {
            if (!this.database) {
                throw new Error('Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            }

            // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —É–∑–µ–ª
            const reference = this.database.ref(`xeetflow/${tournament}`);
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–¥–∏–Ω —Ä–∞–∑
            const snapshot = await reference.once('value');
            const data = snapshot.val();

            if (data) {
                console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ Firebase');
                return {
                    heroes: data.heroes || [],
                    avatars: data.avatars || {},
                    timestamp: data.timestamp,
                    totalRecords: data.totalRecords
                };
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ Firebase:', error);
        }
        
        return null;
    }

    // –°–ª—É—à–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    listenToChanges(tournament, callback) {
        try {
            if (!this.database) {
                throw new Error('Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            }

            const reference = this.database.ref(`xeetflow/${tournament}`);
            
            // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            reference.on('value', (snapshot) => {
                const data = snapshot.val();
                if (data) {
                    console.log('üîÑ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏');
                    callback({
                        heroes: data.heroes || [],
                        avatars: data.avatars || {},
                        timestamp: data.timestamp,
                        totalRecords: data.totalRecords
                    });
                }
            });

            console.log('üëÇ –°–ª—É—à–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª—è:', error);
        }
    }

    // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª—è
    stopListening(tournament) {
        try {
            if (this.database) {
                const reference = this.database.ref(`xeetflow/${tournament}`);
                reference.off();
                console.log('üõë –°–ª—É—à–∞—Ç–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–ª—É—à–∞—Ç–µ–ª—è:', error);
        }
    }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Firebase:
/*
1. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç –Ω–∞ Firebase Console:
   - –ò–¥–µ–º –Ω–∞ console.firebase.google.com
   - Create a project
   - –í–∫–ª—é—á–∞–µ–º Realtime Database
   - –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é

2. –ü–æ–¥–∫–ª—é—á–∞–µ–º Firebase –≤ HTML:
   <script src="https://www.gstatic.com/firebasejs/9.0.0/firebase-app.js"></script>
   <script src="https://www.gstatic.com/firebasejs/9.0.0/firebase-database.js"></script>

3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º:
   const firebaseExample = new FirebaseExample();

4. –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ:
   await firebaseExample.saveData('leagues', {heroes: [...], avatars: {...}});

5. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ:
   const data = await firebaseExample.loadData('leagues');

6. –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è:
   firebaseExample.listenToChanges('leagues', (data) => {
       console.log('–ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:', data);
   });
*/
